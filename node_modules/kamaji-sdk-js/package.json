{
  "_args": [
    [
      "https://github.com/4yopping/kamaji-sdk-js.git",
      "/home/denise/console"
    ]
  ],
  "_from": "git+https://github.com/4yopping/kamaji-sdk-js.git",
  "_id": "kamaji-sdk-js@1.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/kamaji-sdk-js",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/4yopping/kamaji-sdk-js/master/package.json",
      "gitUrl": "git://github.com/4yopping/kamaji-sdk-js.git",
      "httpsUrl": "git+https://github.com/4yopping/kamaji-sdk-js.git",
      "shortcut": "github:4yopping/kamaji-sdk-js",
      "ssh": "git@github.com:4yopping/kamaji-sdk-js.git",
      "sshUrl": "git+ssh://git@github.com/4yopping/kamaji-sdk-js.git",
      "type": "github"
    },
    "name": null,
    "raw": "https://github.com/4yopping/kamaji-sdk-js.git",
    "rawSpec": "https://github.com/4yopping/kamaji-sdk-js.git",
    "scope": null,
    "spec": "git+https://github.com/4yopping/kamaji-sdk-js.git",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/4yopping/kamaji-sdk-js.git#247f60aad6adffc9f76616dd5dfe890681e24cef",
  "_shasum": "c1fce04277e2c9d50acb3b2aed4ac22c61835b14",
  "_shrinkwrap": null,
  "_spec": "https://github.com/4yopping/kamaji-sdk-js.git",
  "_where": "/home/denise/console",
  "author": "",
  "bugs": {
    "url": "https://github.com/4yopping/kamaji-sdk-js/issues"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "request": "^2.65.0"
  },
  "description": "<a href=\"http://4yopping.com\">     <img src=\"http://4yopping.com/4yopping.png\" alt=\"4yopping Logo\"          title=\"4yopping Logo\" align=\"right\" width=\"120px\" height=\"125px\" /> </a>",
  "devDependencies": {
    "co": "^4.6.0",
    "faker": "^3.0.1",
    "jsdoc": "^3.4.0",
    "mocha": "^2.3.3"
  },
  "gitHead": "247f60aad6adffc9f76616dd5dfe890681e24cef",
  "homepage": "https://github.com/4yopping/kamaji-sdk-js#readme",
  "license": "ISC",
  "main": "index.js",
  "name": "kamaji-sdk-js",
  "optionalDependencies": {},
  "readme": "\n<a href=\"http://4yopping.com\">\n    <img src=\"http://4yopping.com/4yopping.png\" alt=\"4yopping Logo\"\n         title=\"4yopping Logo\" align=\"right\" width=\"120px\" height=\"125px\" />\n</a>\n\n# KAMAJI SDK\n\n[![Circle CI](https://circleci.com/gh/4yopping/kamaji-sdk-js/tree/master.svg?style=svg&circle-token=7dab72ee1ba6d1a415fcc5f34fa8ea75a8f71d6e)](https://circleci.com/gh/4yopping/kamaji-sdk-js/tree/master)\n\n\nKamaji SDK for JavaScript\n\n# Installing\n\n```bash\n$ npm install kamaji-sdk-js\n```\n\n# Getting starter\n\n```js\n\nimport Kamaji from 'kamaji-sdk-js'\n\nlet kamaji = new Kamaji({\n  app_key: 'Your_app_key',\n  app_secret: 'Your_very_secure_secret',\n  host: 'https://private-4yopping-super-secure-3000-kamaji-ip',\n  key: fs.readFileSync('./keys/client-key.pem'),\n  cert: fs.readFileSync('./keys/client-cert.pem'),\n  ca: ['./keys/server-cert.pem'],\n  requestCert: true,\n  rejectUnauthorized: true\n})\n```\n\n\n# Usage\n\nCreate\n\n```js\n\nlet Customer = kamaji.Customer;\n\n// Sends a post\nlet jhon = new Customer({\n  name: 'Juanito Falso'\n}).save().then().catch()\n// Returns {id:'123479', name:'Juanito Falso'}\n```\n\nGet customer\n\n```js\n// Obtains a customer\nlet jhon = new Customer({\n  _id: '123479'\n}).fetch().then().catch()\n// Returns {id:'123479', name:'Juanito Falso'}\n```\n\n\nUpdate\n\n```js\nlet jhon = new Customer({\n  _id: '123479'\n})\n\nlet response = yield jhon.fetch()\n// Returns {id:'123479', name:'Juanito Recargado'}\n\njhon.set({\n  name: 'Juanito Recargado'\n}).save()\n// Returns {id:'123479', name:'Juanito Recargado'}\n\n```\n\nRemove\n\n```js\nlet jhon = yield new Customer({\n  _id: '123479'\n})\n\njhon.remove().then().catch()\n// undefined\n\n```\n\n\n\n# General methods\n\n<table>\n  <thead>\n    <th>Method name</th>\n    <th>Description</th>\n    <th>Modifier</th>\n  </thead>\n  <tbody>\n    <tr><td>save()</td><td>Sends a POST or PUT request</td><td>public</td></tr>\n    <tr><td>fetch()</td><td>Sends a GET request</td><td>public</td></tr>\n    <tr><td>set()</td><td>Sets properties to object</td><td>public</td></tr>\n    <tr><td>remove()</td><td>Sends a DELETE request</td><td>public</td></tr>\n  </tbody>\n</table>\n\n# Queries\nTo send queries, for example in the case of obtaining products based on a template use the query object in fetch method.\n\n```js\nlet product = yield new Product({\n  params : Customer.Age\n})\n// or the params can be passed to fetch Method too\nproduct.fetch({\n  p\n  query : {\n    template: 'my-template'\n    dbQuery : {active : true}\n  }\n}).then().catch()\n// you can pass into properties of product the  dbQuery to be used in the search\n// method of mongoose, the default value is the stored in the template\n// object in DB  and param to\n// be passed  as argument to every filter function into the template\n```\n\n\n# Examples\n  [View the tests](./test)\n\n\n# Supported objects\n  API documentation [View docs](http://docs.kamajirest.apiary.io)\n\n  <table>\n    <thead>\n      <th>Service Name</th>\n      <th>Path</th>\n      <th>API Version</th>\n    </thead>\n    <tbody>\n      <tr><td>Kamaji auth</td><td>oauth</td><td>1.0</td></tr>\n      <tr><td>Kamaji customer</td><td>customer</td><td>1.0</td></tr>\n      <tr><td>Kamaji order</td><td>orders</td><td>1.0</td></tr>\n      <tr><td>Kamaji payment</td><td>payments</td><td>1.0</td></tr>\n      <tr><td>Kamaji card</td><td>cards</td><td>1.0</td></tr>\n      <tr><td>Kamaji product</td><td>cards</td><td>1.0</td></tr>\n      <tr><td>Kamaji log</td><td>cards</td><td>1.0</td></tr>\n      <tr><td>Kamaji custom path</td><td>{{path}}</td><td>N/A</td></tr>\n    </tbody>\n  </table>\n\n\n\n# Custom request\n\nUse the api method (this method requires call connect before being executed)\n\n`kamaji.api(path, method, [data]);`\n\nE.g.:\n\n```js\nkamaji.connect().then(() => {\n  kamaji.api('/custom_path', 'post', {data: 'my_data'})\n    .then()\n    .catch();\n});\n```\n\n\n\n# Testing\n\nRunning the tests\n\n```bash\nnpm test\n```\n\n\n## License\nThis projects and it's consequent projects, modules and connections will not be under any open source license until the 4yopping CTO communicates the contrary in a formal way.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/4yopping/kamaji-sdk-js.git"
  },
  "scripts": {
    "docs": "jsdoc -r --readme ./README.md -d ./docs/ -c jsdocs_config.json .",
    "test": "sh test/key-generator.sh && ./node_modules/.bin/mocha test/index.js"
  },
  "version": "1.0.1"
}
