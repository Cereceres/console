'use strict';
const Card = require('./lib/Card');
const Customer = require('./lib/Customer');
const Order = require('./lib/Order');
const Payment = require('./lib/Payment');
const Product = require('./lib/Product');
const Core = require('./lib/Core');
const Log = require('./lib/Log');
/**
 * Kamaji sdk js class
 */
class KamajiSDK {
    /**
     * @constructor
     * @param {_requestOptions} options - Options to request
     */
    constructor(options) {
            options = typeof options === 'undefined' ? {} : options;
            /**  @memberof KamajiSDK */
            this.Card = Card;
            /**  @memberof KamajiSDK */
            this.Customer = Customer;
            /**  @memberof KamajiSDK */
            this.Order = Order;
            /**  @memberof KamajiSDK */
            this.Log = Log;
            /**  @memberof KamajiSDK */
            this.Payment = Payment;
            /**  @memberof KamajiSDK */
            this.Product = Product;
            Core.requestOptions = options;
        }
        /**
         * Connect with kamaji
         * @memberof KamajiSDK
         * @returns {Object} - A primise
         */
    connect() {
            let core = new Core();
            // Promisify the requests for assgn token
            //
            return new Promise(function (resolve, reject) {
                core.tokenRequest().then((res) => {
                    return resolve(res);
                }).catch((err) => {
                    return reject(err);
                });
            });
        }
        /**
         * Sends a custom request
         * @memberof KamajiSDK
         * @param {String} url - Url path
         * @param {String} method - Http method
         * @param {Object} data - Data to send
         * @private
         */
    api(url, method, data) {
        let core = new Core();
        return core.api(url, method, data, true);
    }
}
module.exports = KamajiSDK;