'use strict';
/*
 * For this example run sh key-generator.sh
 * babel-node example.js
 */
const Kamaji = require('../index');
const fs = require('fs');
let kamaji = new Kamaji({
    appKey: '371938510281732901030',
    appSecret: 'ko29l276ussi39ajw29jd92ja0jkd023j49js93jw9xjs',
    host: 'http://private-d5032-kamajirest1.apiary-mock.com',
    key: fs.readFileSync('./test/keys/client-key.pem'),
    cert: fs.readFileSync('./test/keys/client-cert.pem'),
    ca: [fs.readFileSync('./test/keys/server-cert.pem')]
});
// Using Abstract objects
// Request for a customer
//
let jhon = new kamaji.Customer();
jhon.set({
    name: 'Juanito',
    lastName: 'Falso',
});
jhon.fetch().then(function (res) {
    jhon.set({
        _id: res[0]._id
    });
    jhon.fetch().then(function () {});
});
// Or direct request
// This example requires call connection
kamaji.connect().then(() => {
    // Request for a customer
    //
    kamaji.api('/test', 'get').then(() => {}).catch(() => {});
    // Request for a customer
    //
    kamaji.api('/customers', 'get').then(() => {}).catch(() => {});
});